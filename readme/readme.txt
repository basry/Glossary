-Glossary solution includes the backend part of any Glossary system.
-The implmetation here uses a json file as a persistent store .
-The solution also uses Swagger framework to test the exposed endpoints for Glossary Api .
-Set the project "Glossary" as start up project andf it will lunch IIS express , 
  just add /swagger to the url in browser and you will be able to test the api. 
  for example the app will open :
    http://localhost:60444
    just make it 
    http://localhost:60444/swagger
- You can confgiure the json file path from Glossary\appsettings.Development.json 
setting file and you will find the key  "FilePath"


-The project also includes SDK generation if you want to use Glossary project externaly 
 or you want to pack it in Nuget. (the project Client is generated by project SDKGEN)

-The follwoing endpoints are available :
 Get Glossary ----- > it takes the glossary term and return it from backend if exists.
 Search  Glossary  ----> it searches for key word in terms and descriptions and return list of results
Get List by character ----> it returns the glossaries that start with specfice character.
Create Glossary  ------- > it creartes glossary
Update Glossary  ------- > it updates glossary 
Remove Glossary ------- > it removes glossary 